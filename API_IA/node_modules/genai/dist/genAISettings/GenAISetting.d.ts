import GenAIObject from './GenAIObject';
import LayerInterface from './LayerInterface';
export default class GenAISetting extends GenAIObject {
    id: string;
    name: string;
    generationModelName: string;
    currentLayer: LayerInterface;
    tempLayer: LayerInterface;
    docType: string;
    prompt: string;
    promptPrefix: string;
    promptSuffix: string;
    negativePrompt: string;
    stylingStrength: number;
    consistencyStrength: number;
    imageHeight: number;
    imageWidth: number;
    batchSize: number;
    seed: number;
    model_config: string;
    is_cloud_run: boolean;
    isGenerating: boolean;
    constructor(options?: any);
    hasLayerMask(): Promise<boolean>;
    applyLayerMask(): Promise<boolean>;
    duplicateCurrentLayer(): Promise<LayerInterface>;
    getStylingStrength(): number;
    /**
     * The consistency strength is just the amount of denoising will occur.  30 is the max amount of noise in the API.  So we are letting the user
     * set the percentage of noise they want to have.  The higher the number the more noise, it is confusing so we are inversing that for the user and calling it
     * `consistency strength`.  So for the most noise, we will set the consistency strength to 0. for the least noise, we will set the consistency strength to 1.
     * @returns
     */
    getDenoisingStrength(): number;
}
